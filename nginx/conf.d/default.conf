# Super weird nginx syntax

# If http_upgrade is set, then connection_upgrade is set to upgrade, otherwise it is set to close.
# We want to upgrade the connection from HTTP to websocket (TCP) in order to stream media. HTTP is send and respons based, while TCP websocket is a persistent connection.
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

resolver 127.0.0.11 valid=10s ipv6=off;

server {
    listen 80;
    server_name _;

    # This is to prevent bots from accessing sensitive files.
    location ~* /\.(env|git|aws|bak|old|sql)$ {
        deny all;
    }


    proxy_set_header Host $host; 

    # Makes it so that services can see the real IP of the client. Not NGINX's IP.
    proxy_set_header X-Real-IP $remote_addr;

    # IDK what this does, but it is needed for some services to work properly.
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # What protocol is being used NGINX to communicate with the client. Basically service gets the same protocol as the client (not just NGINX proto to service).
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_http_version 1.1;                   
    proxy_set_header Upgrade $http_upgrade;  
    proxy_set_header Connection $connection_upgrade;
 
    # ^~ This is a prefix match, meaning it will match any URL that starts with the specified path.
    location ^~ /jellyfin/   { proxy_pass http://jellyfin:8096/;   }
    location ^~ /prowlarr/   { proxy_pass http://prowlarr:9696/;   }
    location ^~ /radarr/     { proxy_pass http://radarr:7878/;     }
    location ^~ /sonarr/     { proxy_pass http://sonarr:8989/;     }
    location ^~ /portainer/  { proxy_pass http://portainer:9000/;  }
    location ^~ /qbittorrent/ { proxy_pass http://gluetun:8080/;   }
}

