########################################################################
# Networks (one shared bridge so containers can talk by service-name)
########################################################################
networks:
  media:
    driver: bridge        # Docker’s built-in DNS handles service discovery

services:
  ########################################################################
  # 1) Gluetun (VPN) – publishes qBittorrent UI on host:8080 → 8080
  ########################################################################
  gluetun:
    image: qmcgaw/gluetun:latest          # pin a tag in prod
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    environment:
      - TZ=Europe/Stockholm
      - VPN_SERVICE_PROVIDER=mullvad
      - VPN_TYPE=wireguard
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
      - WIREGUARD_ENDPOINT=${WIREGUARD_ENDPOINT}
      - WIREGUARD_ALLOWED_IPS=${WIREGUARD_ALLOWED_IPS}
      - SERVER_COUNTRIES=Sweden
      - DNS=${DNS}
    ports:
      - "8080:8080"       # optional; omit if you’ll proxy qB manually
    networks: [ media ]

  ########################################################################
  # 2) qBittorrent – shares Gluetun’s network namespace, no extra ports
  ########################################################################
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:gluetun"       # rides inside the VPN stack
    depends_on: [ gluetun ]
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
    volumes:
      - "${COMMON_PATH}/Qbittorrent/Config:/config"
      - "${COMMON_PATH}/Downloads:/data/downloads"

  ########################################################################
  # 3) Sonarr – private, reachable at http://sonarr:8989 from Nginx
  ########################################################################
  sonarr:
    image: lscr.io/linuxserver/sonarr:4.0.5
    container_name: sonarr
    restart: unless-stopped
    networks: [ media ]
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
      - URL_BASE=/sonarr
    volumes:
      - "${COMMON_PATH}/Sonarr/Config:/config"
      - "${COMMON_PATH}/Sonarr/Backup:/data/Backup"
      - "${COMMON_PATH}/Sonarr/tvshows:/data/tvshows"
      - "${COMMON_PATH}/Downloads:/data/downloads"


  ########################################################################
  # 4) Radarr – private, http://radarr:7878
  ########################################################################
  radarr:
    image: lscr.io/linuxserver/radarr:5.4.6
    container_name: radarr
    restart: unless-stopped
    networks: [ media ]
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
      - URL_BASE=/radarr
    volumes:
      - "${COMMON_PATH}/Radarr/Config:/config"
      - "${COMMON_PATH}/Radarr/Backup:/data/Backup"
      - "${COMMON_PATH}/Radarr/movies:/data/movies"
      - "${COMMON_PATH}/Downloads:/data/downloads"


  ########################################################################
  # 5) Prowlarr – private, http://prowlarr:9696
  ########################################################################
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    networks: [ media ]
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
      - URL_BASE=/prowlarr # MIGHT BE BREAKING THINGS
    volumes:
      - "${COMMON_PATH}/Prowlarr/Config:/config"
      - "${COMMON_PATH}/Prowlarr/Backup:/data/Backup"
      - "${COMMON_PATH}/Downloads:/data/downloads"
      

  ########################################################################
  # 6) Jellyfin – private, http://jellyfin:8096 (WebSocket-ready)
  ########################################################################
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    networks: [ media ]
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8096/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - UID=1000
      - GID=1000
      - TZ=Europe/Stockholm
    volumes:
      - "${COMMON_PATH}/Jellyfin/Config:/config"
      - "${COMMON_PATH}/Jellyfin/Cache:/cache"
      - "${COMMON_PATH}/Sonarr/tvshows:/data/tvshows"
      - "${COMMON_PATH}/Radarr/movies:/data/movies"
      - "${COMMON_PATH}/Downloads:/data/downloads"

  ########################################################################
  # 7) Flaresolverr – private helper, http://flaresolverr:8191
  ########################################################################
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:v3.3.18
    container_name: flaresolverr
    restart: unless-stopped
    networks: [ media ]
    environment:
      - UID=1000
      - GID=1000
      - TZ=Europe/Stockholm

  ########################################################################
  # 8) Jellyseerr – private, http://jellyseerr:5055
  ########################################################################
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: unless-stopped
    networks: [ media ]
    depends_on: [ jellyfin, sonarr, radarr ]
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
    volumes:
      - "${COMMON_PATH}/Jellyseerr/Config:/app/config"

  ########################################################################
  # 9) Portainer – manage everything at https://HOST:9443
  ########################################################################
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    networks: [ media ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "${COMMON_PATH}/Portainer/Data:/data"
      - "${COMMON_PATH}/Portainer/Data/portainer.key:/data/portainer.key:ro"

  ########################################################################
  # 10) Nginx Reverse Proxy – *only* public entry point on 80/443
  ########################################################################
  nginx-proxy:
    image: nginx:stable
    container_name: nginx-proxy
    restart: unless-stopped
    networks: [ media ]
    ports:
      - "80:80"
    volumes:
      - "./nginx/conf.d:/etc/nginx/conf.d:ro"  # v-host files
      - "./nginx/logs:/var/log/nginx"
